{"version":3,"sources":["../src/contracts.js"],"names":["getInfosForContractMethod","contractAddress","selector","lcSelector","toLowerCase","lcContractAddress","data","contractSelectors","payload","signature","plugin","erc20OfInterest","abi"],"mappings":";;;;;;;AAAA;;;;AAEA;AACA;AACA;AAEO,MAAMA,yBAAyB,GAAG,CAACC,eAAD,EAAkBC,QAAlB,KAA+B;AACtE,QAAMC,UAAU,GAAGD,QAAQ,CAACE,WAAT,EAAnB;AACA,QAAMC,iBAAiB,GAAGJ,eAAe,CAACG,WAAhB,EAA1B;;AAEA,MAAIC,iBAAiB,IAAIC,iBAAzB,EAA+B;AAC7B,UAAMC,iBAAiB,GAAGD,kBAAKD,iBAAL,CAA1B;;AAEA,QAAIF,UAAU,IAAII,iBAAlB,EAAqC;AACnC,aAAO;AACLC,QAAAA,OAAO,EAAED,iBAAiB,CAACJ,UAAD,CAAjB,CAA8B,iBAA9B,CADJ;AAELM,QAAAA,SAAS,EAAEF,iBAAiB,CAACJ,UAAD,CAAjB,CAA8B,WAA9B,CAFN;AAGLO,QAAAA,MAAM,EAAEH,iBAAiB,CAACJ,UAAD,CAAjB,CAA8B,QAA9B,CAHH;AAILQ,QAAAA,eAAe,EAAEJ,iBAAiB,CAACJ,UAAD,CAAjB,CAA8B,iBAA9B,CAJZ;AAKLS,QAAAA,GAAG,EAAEL,iBAAiB,CAAC,KAAD;AALjB,OAAP;AAOD;AACF;AACF,CAjBM","sourcesContent":["import data from \"@ledgerhq/cryptoassets/data/dapps/ethereum\";\n\n/**\n * Retrieve the metadatas a given contract address and a method selector\n */\n\nexport const getInfosForContractMethod = (contractAddress, selector) => {\n  const lcSelector = selector.toLowerCase();\n  const lcContractAddress = contractAddress.toLowerCase();\n\n  if (lcContractAddress in data) {\n    const contractSelectors = data[lcContractAddress];\n\n    if (lcSelector in contractSelectors) {\n      return {\n        payload: contractSelectors[lcSelector][\"serialized_data\"],\n        signature: contractSelectors[lcSelector][\"signature\"],\n        plugin: contractSelectors[lcSelector][\"plugin\"],\n        erc20OfInterest: contractSelectors[lcSelector][\"erc20OfInterest\"],\n        abi: contractSelectors[\"abi\"],\n      };\n    }\n  }\n};\n"],"file":"contracts.js"}