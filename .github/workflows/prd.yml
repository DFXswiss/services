name: PRD CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '16.x'
  AZURE_ACCOUNT_NAME: 'stdfxsrvprd'
  AZURE_CDN_PROFILE: 'cdnp-dfx-srv-prd'
  AZURE_CDN_ENDPOINT: 'cdne-dfx-srv-prd'
  AZURE_RESOURCE_GROUP: 'rg-dfx-srv-prd'

jobs:
  build:
    name: Build and deploy to PRD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.PRD_CREDENTIALS }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_ACCESS_TOKEN }}" > .npmrc

      - name: Install packages
        run: |
          npm ci

      - name: Read version
        id: package_version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Update WalletConnect PID
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '{WC_PID}'
          replace: ${{ secrets.PRD_WC_PID}}
          regex: false

      - name: Update Alchemy Key
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '{ALCHEMY_KEY}'
          replace: ${{ secrets.PRD_ALCHEMY_KEY}}
          regex: false

      - name: Update Sift Beacon Key
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '{SIFT_BEACON_KEY}'
          replace: ${{ secrets.PRD_SIFT_BEACON_KEY}}
          regex: false

      - name: Build code
        env:
          REACT_APP_BUILD_ID: ${{ github.run_number }}-${{ github.run_id }}
        run: |
          echo "REACT_APP_BUILD_ID=$REACT_APP_BUILD_ID" >> .env.prd
          npm run build

      - name: Run tests
        run: |
          npm run test

      - name: Run linter
        run: |
          npm run lint

      - name: Build widget
        run: |
          npm run widget

      - name: Build library
        run: npm run build:lib

      - name: Copy widget
        run: |
          version=$(echo "v${{ steps.package_version.outputs.current-version }}" | cut -d '.' -f1-2)

          mkdir -p ./build/widget/$version-chunks
          cp ./widget/static/js/main.*.js ./build/widget/$version
          cp ./widget/static/css/main.*.css ./build/widget/$version.css
          cp ./widget/$version-chunks/*.chunk.js ./build/widget/$version-chunks
          cp ./widget/$version-chunks/*.module.wasm ./build/widget/$version-chunks

          sed -i "s|main-widget.css|https://app.dfx.swiss/widget/$version.css|g" "./build/widget/$version"

      - name: Deploy to Azure Storage (PRD)
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az storage blob upload-batch --account-name ${{ env.AZURE_ACCOUNT_NAME }} -d '$web' -s ./build --overwrite

      - name: Purge CDN endpoint (PRD)
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az cdn endpoint purge --content-paths  "/*" --profile-name ${{ env.AZURE_CDN_PROFILE }} --name ${{ env.AZURE_CDN_ENDPOINT }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}

      - name: Publish to npm
        continue-on-error: true
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

      - name: Logout
        run: |
          az logout
        if: always()
